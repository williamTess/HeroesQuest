{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/Projets Code/entretient/map-resolver/src/utils/RenderMap.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderMap = props => {\n  const {\n    map\n  } = props;\n  if (map[0].length > 50) {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"scroll\"\n      },\n      children: \"Too big to be render\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"scroll\"\n    },\n    children: map.map((linex, idx) => {\n      const tmpy = linex.map((liney, idy) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: liney\n      }, idy, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 48\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 10\n        },\n        children: tmpy\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = RenderMap;\nexport default RenderMap;\nvar _c;\n$RefreshReg$(_c, \"RenderMap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RenderMap","props","map","length","style","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","linex","idx","tmpy","liney","idy","display","gap","_c","$RefreshReg$"],"sources":["/Users/william/Desktop/Projets Code/entretient/map-resolver/src/utils/RenderMap.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface Props {\n  map: string[][];\n}\n\nconst RenderMap = (props: Props) => {\n  const { map } = props;\n  if (map[0].length > 50) {\n    <div style={{ overflow: \"scroll\" }}>Too big to be render</div>;\n  }\n  return (\n    <div style={{ overflow: \"scroll\" }}>\n      {map.map((linex, idx) => {\n        const tmpy = linex.map((liney, idy) => <div key={idy}>{liney}</div>);\n        return (\n          <div key={idx} style={{ display: \"flex\", gap: 10 }}>\n            {tmpy}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RenderMap;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,SAAS,GAAIC,KAAY,IAAK;EAClC,MAAM;IAAEC;EAAI,CAAC,GAAGD,KAAK;EACrB,IAAIC,GAAG,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,EAAE;IACtB,aAAAJ,OAAA;MAAKK,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChE;EACA,oBACEX,OAAA;IAAKK,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,EAChCJ,GAAG,CAACA,GAAG,CAAC,CAACS,KAAK,EAAEC,GAAG,KAAK;MACvB,MAAMC,IAAI,GAAGF,KAAK,CAACT,GAAG,CAAC,CAACY,KAAK,EAAEC,GAAG,kBAAKhB,OAAA;QAAAO,QAAA,EAAgBQ;MAAK,GAAXC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,CAAC;MACpE,oBACEX,OAAA;QAAeK,KAAK,EAAE;UAAEY,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAG,CAAE;QAAAX,QAAA,EAChDO;MAAI,GADGD,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GAjBIlB,SAAS;AAmBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}