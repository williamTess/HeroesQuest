{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/Projets Code/entretient/map-resolver/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport readFile from \"./utils/readFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fileTypes = [\"TXT\"];\nconst App = () => {\n  _s();\n  const [content, setContent] = useState([]);\n  const handleChange = file => {\n    const reader = readFile(file);\n    if (reader) {\n      reader.onload = () => {\n        const tmp = reader.result;\n        setContent(tmp.split(\"\\n\"));\n      };\n    } else {\n      alert(\"error\");\n    }\n  };\n  console.log(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      handleChange: handleChange,\n      name: \"file\",\n      types: fileTypes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AdaM8L354cx8imjulwvVz1sJ5ys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUploader","logo","readFile","jsxDEV","_jsxDEV","fileTypes","App","_s","content","setContent","handleChange","file","reader","onload","tmp","result","split","alert","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","types","_c","$RefreshReg$"],"sources":["/Users/william/Desktop/Projets Code/entretient/map-resolver/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport readFile from \"./utils/readFile\";\n\nconst fileTypes = [\"TXT\"];\n\nconst App = () => {\n  const [content, setContent] = useState<string[]>([]);\n\n  const handleChange = (file: any) => {\n    const reader = readFile(file);\n    if (reader) {\n      reader.onload = () => {\n        const tmp = reader.result as string;\n        setContent(tmp.split(\"\\n\"));\n      };\n    } else {\n      alert(\"error\");\n    }\n  };\n  console.log(content);\n\n  return (\n    <div className=\"App\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n      <FileUploader handleChange={handleChange} name=\"file\" types={fileTypes} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAAC,KAAK,CAAC;AAEzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAEpD,MAAMW,YAAY,GAAIC,IAAS,IAAK;IAClC,MAAMC,MAAM,GAAGV,QAAQ,CAACS,IAAI,CAAC;IAC7B,IAAIC,MAAM,EAAE;MACVA,MAAM,CAACC,MAAM,GAAG,MAAM;QACpB,MAAMC,GAAG,GAAGF,MAAM,CAACG,MAAgB;QACnCN,UAAU,CAACK,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC;MAC7B,CAAC;IACH,CAAC,MAAM;MACLC,KAAK,CAAC,OAAO,CAAC;IAChB;EACF,CAAC;EACDC,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC;EAEpB,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAKkB,GAAG,EAAErB,IAAK;MAACmB,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElDvB,OAAA,CAACJ,YAAY;MAACU,YAAY,EAAEA,YAAa;MAACkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvBID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}