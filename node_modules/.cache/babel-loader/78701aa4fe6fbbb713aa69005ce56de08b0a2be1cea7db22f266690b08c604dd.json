{"ast":null,"code":"const readFile = file => {\n  const reader = new FileReader();\n  // const [txt, setTxt] = useState<string>(\"\");\n\n  if (!file) return [];\n  reader.readAsText(file);\n  // reader.onload = () => {\n  //   setTxt(reader.result as string);\n  // };\n  reader.onerror = () => {\n    alert(\"error\");\n  };\n  const content = reader.result;\n  if (!content) return [];\n  return content.split(\"\\n\");\n};\nexport default readFile;","map":{"version":3,"names":["readFile","file","reader","FileReader","readAsText","onerror","alert","content","result","split"],"sources":["/Users/william/Desktop/Projets Code/entretient/map-resolver/src/utils/read-file.ts"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst readFile = (file: Blob): string[] => {\n  const reader = new FileReader();\n  // const [txt, setTxt] = useState<string>(\"\");\n\n  if (!file) return [];\n\n  reader.readAsText(file);\n  // reader.onload = () => {\n  //   setTxt(reader.result as string);\n  // };\n  reader.onerror = () => {\n    alert(\"error\");\n  };\n\n  const content = reader.result as string;\n  if (!content) return [];\n\n  return content.split(\"\\n\");\n};\n\nexport default readFile;\n"],"mappings":"AAEA,MAAMA,QAAQ,GAAIC,IAAU,IAAe;EACzC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAC/B;;EAEA,IAAI,CAACF,IAAI,EAAE,OAAO,EAAE;EAEpBC,MAAM,CAACE,UAAU,CAACH,IAAI,CAAC;EACvB;EACA;EACA;EACAC,MAAM,CAACG,OAAO,GAAG,MAAM;IACrBC,KAAK,CAAC,OAAO,CAAC;EAChB,CAAC;EAED,MAAMC,OAAO,GAAGL,MAAM,CAACM,MAAgB;EACvC,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;EAEvB,OAAOA,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;AAC5B,CAAC;AAED,eAAeT,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}